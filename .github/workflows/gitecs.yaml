name: CI/CD with Docker, ECR, and ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      ECR_REPOSITORY: contianers
      IMAGE_TAG: ${{ github.sha }}
      ECS_CLUSTER: food-order-app
      ECS_BACKEND_SERVICE: backend-service
      ECS_BACKEND_TASK_DEFINITION: backend_task_definition.json
      ECS_DATABASE_SERVICE: database-service
      ECS_DATABASE_TASK_DEFINITION: database_task_definition.json
      ECS_FRONTEND_SERVICE: frontend-service
      ECS_FRONTEND_TASK_DEFINITION: frontend_task_definition.json

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Authenticate to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build, tag, and push frontend image
        id: build-image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:frontend-$IMAGE_TAG ./frontend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:frontend-$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Build, tag, and push backend image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:backend-$IMAGE_TAG ./backend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:backend-$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:backend-$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build, tag, and push database image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:database-$IMAGE_TAG ./database
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:database-$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:database-$IMAGE_TAG" >> $GITHUB_ENV








      - name: Fill in the new image ID in the Amazon ECS task definition
        id: frontend-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
           task-definition: frontend_task_definition.json
           container-name: myfrontend
           image: ${{ steps.build-image.outputs.image }}



      - name: Create Frontend ECS service
        run: |
         aws ecs create-service \
         --cluster $ECS_CLUSTER \
         --service-name $ECS_FRONTEND_SERVICE \
         --task-definition $ECS_FRONTEND_TASK_DEFINITION \
         --desired-count 1 \
         --region $AWS_REGION  # Add the region to the command
    # Add a sleep command to wait for the service to stabilize
    



      - name: Deploy Amazon ECS frontend task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.frontend-task-def.outputs.task-definition }}
          service: ${{ env.ECS_FRONTEND_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
